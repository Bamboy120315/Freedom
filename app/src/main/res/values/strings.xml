<resources>
    <string name="app_name">Freedom</string>

    <!-- 下拉刷新 SmartRefresh 所需 start -->
    <string name="srl_header_pulling">下拉刷新</string>
    <string name="srl_header_release">松手开始刷新</string>
    <string name="srl_header_refreshing">正在刷新…</string>
    <string name="srl_header_loading">加载中…</string>
    <string name="srl_header_finish">刷新成功</string>
    <string name="srl_header_failed">刷新失败</string>
    <string name="srl_header_update">\'上次更新\' M-d HH:mm</string>
    <string name="srl_header_secondary">Release To Second Floor</string>

    <string name="srl_footer_pulling">继续下拉</string>
    <string name="srl_footer_release">松手开始加载</string>
    <string name="srl_footer_loading">加载中…</string>
    <string name="srl_footer_refreshing">Wait For Refreshing…</string>
    <string name="srl_footer_finish">读取成功</string>
    <string name="srl_footer_failed">读取失败</string>
    <string name="srl_footer_nothing">没有更多数据</string>

    <string name="srl_content_empty">The content view in SmartRefreshLayout is empty. Do you forget to add it in xml layout file?</string>
    <string name="srl_component_falsify" formatted="false">%s falsify area,\n Represents the height[%.1fdp] of drag at run time,\n It does not show anything.</string>
    <!-- 下拉刷新 SmartRefresh 所需 end -->

    <string name="smartrefresh_introduce">
        SmartRefreshLayout
        \n是github上的一位大神写的下拉刷新布局，
        \n功能丰富强大，
        \n使用方便易懂，
        \n链接：https://github.com/scwang90/SmartRefreshLayout。
        \n
        \n本Demo就是整合了SmartRefresh，
        \n然后进行了简单的精简，
        \n并且为了与本Demo风格统一，
        \n额外写了一种刷新样式，
        \n并置为默认样式。
        \n
        \n使用起来非常简单，
        \nXML里将RecyclerView
        \n用SmartRefreshLayout包裹住。
        \n然后Java里加个监听就可以了。
        \n
        \n详见代码。
        \n
    </string>

    <string name="smartrefresh_classice_introduce">
        SmartRefreshLayout
        \n是github上的一位大神写的下拉刷新布局，
        \n功能丰富强大，
        \n使用方便易懂，
        \n链接：https://github.com/scwang90/SmartRefreshLayout。
        \n
        \n本Demo就是整合了SmartRefresh，
        \n然后进行了简单的精简.
        \n
        \n使用起来非常简单，
        \nXML里将RecyclerView
        \n用SmartRefreshLayout包裹住，
        \n本页使用的是经典的下拉刷新风格，
        \n在RecyclerView同级上面
        \n加上ClassicsHeader即可。
        \n最后Java里加个监听就可以了。
        \n
        \n详见代码。
        \n
    </string>

    <string name="smartrefresh_personal_center_introduce">
        本页是个人中心Demo，
        \n与正常情况不同的是，
        \n头部有一张图片，
        \n上面探到下拉刷新头顶部，
        \n下面嵌入列表充当背景，
        \n以达到完美沉浸的效果。
        \n
        \n我来说下我的实现方式吧：
        \n首先这是一个ImageView，
        \n与RecyclerView同级，
        \n但是被RecyclerView覆盖，
        \n
        \n然后在下拉监听里，
        \n实时监听下拉距离，
        \n改变ImageView坐标。
        \nRecyclerView的滚动监听里同理。
        \n
        \n这些都很简单，
        \n繁琐的地方在计算这个图片的起始位置，
        \n这个一两句话说不清，
        \n详细可以看代码。
    </string>

    <string name="smartrefresh_top_fixed_introduce">
        \n
        \n本页是头部固定Demo，
        \n适用于头部固定，
        \n又需要下拉刷新的场景。
        \n
        \n实现起来也很简单，
        \n将固定的头部
        \n与RecyclerView
        \n包裹在一个容器内即可。
        \n
        \n详见XML。
    </string>

</resources>
